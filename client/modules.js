/// WARNING DO NOT EDIT THIS FILE, IT IS CODE-GENERATED!!!
/// WARNING DO NOT EDIT THIS FILE, IT IS CODE-GENERATED!!!
/// WARNING DO NOT EDIT THIS FILE, IT IS CODE-GENERATED!!!

let operator_constructors = { 
  
  "ceil": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"ceil", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "fastpow": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"fastpow", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "mul": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"mul", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.product","index":0 }
    ]`);
  },
  "fold": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"fold", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.min", "index":1 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.max", "index":2 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "rdiv": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"rdiv", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.quotient","index":0 }
    ]`);
  },
  "min": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"min", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "mix": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"mix", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.loval", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.hival", "index":1 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.interp", "index":2 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "cartopol": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"cartopol", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.x", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.y", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.distance","index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.angle","index":1 }
    ]`);
  },
  "tanh": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"tanh", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "scale": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"scale", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.ilo", "index":1 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.ihi", "index":2 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.olo", "index":3 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.ohi", "index":4 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.exp", "index":5 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "eqp": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"eqp", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "sin": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"sin", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "exp": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"exp", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "eq": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"eq", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "exp2": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"exp2", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "ltep": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"ltep", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "poltocar": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"poltocar", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.r", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.theta", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.x","index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.y","index":1 }
    ]`);
  },
  "fract": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"fract", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.fract","index":0 }
    ]`);
  },
  "sqrt": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"sqrt", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "radians": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"radians", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.degrees", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "neqp": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"neqp", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "atan": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"atan", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "mod": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"mod", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.modulo","index":0 }
    ]`);
  },
  "atanh": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"atanh", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "fastexp": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"fastexp", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "sinh": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"sinh", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "acos": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"acos", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "rmod": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"rmod", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.modulo","index":0 }
    ]`);
  },
  "sub": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"sub", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.difference","index":0 }
    ]`);
  },
  "neq": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"neq", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "ltp": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"ltp", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "bool": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"bool", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.bool","index":0 }
    ]`);
  },
  "add": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"add", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.sum","index":0 }
    ]`);
  },
  "max": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"max", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "hypot": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"hypot", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.x", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.y", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "floor": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"floor", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "abs": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"abs", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.abs","index":0 }
    ]`);
  },
  "absdiff": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"absdiff", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.abs-diff","index":0 }
    ]`);
  },
  "log2": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"log2", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "degrees": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"degrees", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.radians", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "selector": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"selector", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}....", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "switch": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"switch", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.condition", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.iftrue", "index":1 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.iffalse", "index":2 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "cosh": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"cosh", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "out": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"out", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 }
    ]`);
  },
  "wrap": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"wrap", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.min", "index":1 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.max", "index":2 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "smoothstep": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"smoothstep", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.loval", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.hival", "index":1 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.interp", "index":2 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "acosh": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"acosh", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "step": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"step", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "gtep": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"gtep", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "or": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"or", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "fastsin": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"fastsin", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "fastcos": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"fastcos", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "sign": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"sign", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "log10": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"log10", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "log": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"log", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "lte": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"lte", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "gte": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"gte", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "asinh": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"asinh", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "clamp": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"clamp", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.min", "index":1 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.max", "index":2 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.clamped","index":0 }
    ]`);
  },
  "noise": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"noise", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"outlet", "path":"${path}.random-stream","index":0 }
    ]`);
  },
  "pow": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"pow", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "fasttan": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"fasttan", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "lt": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"lt", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "and": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"and", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "div": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"div", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.quotient","index":0 }
    ]`);
  },
  "xor": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"xor", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "atan2": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"atan2", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.opposite", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.adjacent", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "gt": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"gt", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "gtp": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"gtp", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "not": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"not", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "pass": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"pass", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "asin": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"asin", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "rsub": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"rsub", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value1", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value2", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.difference","index":0 }
    ]`);
  },
  "tan": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"tan", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "trunc": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"trunc", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "cos": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"cos", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "neg": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"neg", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "rate": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"rate", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.phase", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.multiplier", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "ftom": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"ftom", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.freq", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.tuning", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "sah": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"sah", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.control", "index":1 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.thresh", "index":2 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "counter": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"counter", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.incr", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.reset", "index":1 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.max", "index":2 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out2","index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out3","index":2 }
    ]`);
  },
  "sampstoms": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"sampstoms", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.period", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "train": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"train", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.period", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.width", "index":1 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.onset", "index":2 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "dbtoa": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"dbtoa", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.db", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "latch": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"latch", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.control", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "mulequals": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"mulequals", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.incr", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.reset", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "elapsed": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"elapsed", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "change": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"change", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "triangle": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"triangle", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.phase", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.duty", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "phasewrap": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"phasewrap", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.phase", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "mtof": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"mtof", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.note", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.tuning", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "isnan": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"isnan", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "t60time": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"t60time", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.multiplier", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "delta": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"delta", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "history": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"history", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.value", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "t60": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"t60", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.time", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "plusequals": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"plusequals", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.incr", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.reset", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "fixnan": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"fixnan", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "mstosamps": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"mstosamps", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.period", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "round": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"round", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.base", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "interp": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"interp", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.t", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.a", "index":1 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.b", "index":2 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "slide": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"slide", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.up", "index":1 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.down", "index":2 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "atodb": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"atodb", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.amplitude", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "cycle": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"cycle", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.freq", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out2","index":1 }
    ]`);
  },
  "dcblock": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"dcblock", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "phasor": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"phasor", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.freq", "index":0 },
      { "op":"newnode", "kind":"inlet", "path":"${path}.reset", "index":1 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "isdenorm": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"isdenorm", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  },
  "fixdenorm": function(path) { 
    return JSON.parse(`[
      { "op":"newnode", "path":"${path}", "kind":"fixdenorm", "category":"operator", "pos":[0,0,0], "orient":[0,0,0,1] },
      { "op":"newnode", "kind":"inlet", "path":"${path}.input", "index":0 },
      { "op":"newnode", "kind":"outlet", "path":"${path}.out1","index":0 }
    ]`);
  }
}

let module_constructors = {
	"sample_and_hold": function(path) { 
    return JSON.parse(`[
			{
				"op": "newnode",
				"path": "${path}",
				"kind": "sample_and_hold",
				"category": "abstraction",
				"pos": [
					0,
					0,
					0
				],
				"orient": [
					0,
					0,
					0,
					1
				]
			},
			{
				"op": "newnode",
				"path": "${path}.signal",
				"kind": "inlet",
				"index": 0
			},
			{
				"op": "newnode",
				"path": "${path}.trigger",
				"kind": "inlet",
				"index": 1
			},
			{
				"op": "newnode",
				"path": "${path}.threshold",
				"kind": "small_knob",
				"range": [
					0,
					1
				],
				"taper": "linear",
				"value": 0,
				"unit": "float"
			},
			{
				"op": "newnode",
				"path": "${path}.out",
				"kind": "outlet",
				"index": 0
			}
		]`);
    },

	"freevoib": function(path) { 
    return JSON.parse(`[
			{
				"op": "newnode",
				"path": "${path}",
				"kind": "freevoib",
				"category": "abstraction",
				"pos": [
					0,
					0,
					0
				],
				"orient": [
					0,
					0,
					0,
					1
				]
			},
			{
				"op": "newnode",
				"path": "${path}.signal",
				"kind": "inlet",
				"index": 0
			},
			{
				"op": "newnode",
				"path": "${path}.feedback_1",
				"kind": "small_knob",
				"range": [
					0,
					1
				],
				"taper": "linear",
				"value": 0.9,
				"unit": "float"
			},
			{
				"op": "newnode",
				"path": "${path}.feedback_2",
				"kind": "small_knob",
				"range": [
					0,
					1
				],
				"taper": "linear",
				"value": 0.5,
				"unit": "float"
			},
			{
				"op": "newnode",
				"path": "${path}.damping",
				"kind": "small_knob",
				"range": [
					0,
					1
				],
				"taper": "linear",
				"value": 0.5,
				"unit": "float"
			},
			{
				"op": "newnode",
				"path": "${path}.spread",
				"kind": "small_knob",
				"range": [
					0,
					400
				],
				"taper": "linear",
				"value": 100,
				"unit": "float"
			},
			{
				"op": "newnode",
				"path": "${path}.out",
				"kind": "outlet",
				"index": 0
			}
		]`);
    },

	"shifter": function(path) { 
    return JSON.parse(`[
			{
				"op": "newnode",
				"path": "${path}",
				"kind": "shifter",
				"category": "abstraction",
				"pos": [
					0,
					0,
					0
				],
				"orient": [
					0,
					0,
					0,
					1
				]
			},
			{
				"op": "newnode",
				"path": "${path}.signal",
				"kind": "inlet",
				"index": 0
			},
			{
				"op": "newnode",
				"path": "${path}.cv",
				"kind": "inlet",
				"index": 1
			},
			{
				"op": "newnode",
				"path": "${path}.range",
				"kind": "small_knob"
			},
			{
				"op": "newnode",
				"path": "${path}.out",
				"kind": "outlet",
				"index": 0
			},
			{
				"op": "newnode",
				"path": "${path}.>",
				"kind": "outlet",
				"index": 1
			}
		]`);
    },

	"constant": function(path) { 
    return JSON.parse(`[
			{
				"op": "newnode",
				"path": "${path}",
				"kind": "constant",
				"category": "abstraction",
				"pos": [
					0,
					0,
					0
				],
				"orient": [
					0,
					0,
					0,
					1
				]
			},
			{
				"op": "newnode",
				"path": "${path}.voltage",
				"kind": "large_knob"
			},
			{
				"op": "newnode",
				"path": "${path}.out",
				"kind": "outlet",
				"index": 0
			}
		]`);
    },

	"lfo": function(path) { 
    return JSON.parse(`[
			{
				"op": "newnode",
				"path": "${path}",
				"kind": "lfo",
				"category": "abstraction",
				"pos": [
					0,
					0,
					0
				],
				"orient": [
					0,
					0,
					0,
					1
				]
			},
			{
				"op": "newnode",
				"path": "${path}.fm_cv",
				"kind": "inlet",
				"index": 0
			},
			{
				"op": "newnode",
				"path": "${path}.phasor_sync",
				"kind": "inlet",
				"index": 1
			},
			{
				"op": "newnode",
				"path": "${path}.pulse_width_cv",
				"kind": "inlet",
				"index": 2
			},
			{
				"op": "newnode",
				"path": "${path}.rate",
				"kind": "large_knob",
				"range": [
					0,
					80
				],
				"taper": "log 3.8",
				"value": 0.63,
				"unit": "Hz"
			},
			{
				"op": "newnode",
				"path": "${path}.index",
				"kind": "small_knob",
				"range": [
					0,
					10
				],
				"taper": "linear",
				"value": 1,
				"unit": "float"
			},
			{
				"op": "newnode",
				"path": "${path}.pulse_width",
				"kind": "small_knob",
				"range": [
					0,
					1
				],
				"taper": "linear",
				"value": 0.25,
				"unit": "float"
			},
			{
				"op": "newnode",
				"path": "${path}.onset",
				"kind": "small_knob",
				"range": [
					0,
					1
				],
				"taper": "linear",
				"value": 0,
				"unit": "float"
			},
			{
				"op": "newnode",
				"path": "${path}.sine",
				"kind": "outlet",
				"index": 0
			},
			{
				"op": "newnode",
				"path": "${path}.phasor",
				"kind": "outlet",
				"index": 1
			},
			{
				"op": "newnode",
				"path": "${path}.pulse",
				"kind": "outlet",
				"index": 2
			},
			{
				"op": "newnode",
				"path": "${path}.sine_index",
				"kind": "outlet",
				"index": 3
			}
		]`);
    },

	"dualvco": function(path) { 
    return JSON.parse(`[
			{
				"op": "newnode",
				"path": "${path}",
				"kind": "dualvco",
				"category": "abstraction",
				"pos": [
					0,
					0,
					0
				],
				"orient": [
					0,
					0,
					0,
					1
				]
			},
			{
				"op": "newnode",
				"path": "${path}.vco_1_cv",
				"kind": "inlet",
				"index": 0
			},
			{
				"op": "newnode",
				"path": "${path}.index_cv",
				"kind": "inlet",
				"index": 1
			},
			{
				"op": "newnode",
				"path": "${path}.vco_2_cv",
				"kind": "inlet",
				"index": 2
			},
			{
				"op": "newnode",
				"path": "${path}.feedback_cv",
				"kind": "inlet",
				"index": 3
			},
			{
				"op": "newnode",
				"path": "${path}.vco_1_rate",
				"kind": "large_knob",
				"range": [
					0,
					6000
				],
				"taper": "log 3.8",
				"value": 120,
				"unit": "Hz"
			},
			{
				"op": "newnode",
				"path": "${path}.vco_1_waveform",
				"kind": "n_switch",
				"throws": [
					"Sine",
					"Phasor",
					"Triangle"
				],
				"value": 1
			},
			{
				"op": "newnode",
				"path": "${path}.vco_2_rate",
				"kind": "large_knob",
				"range": [
					0,
					6000
				],
				"taper": "log 3.8",
				"value": 3,
				"unit": "Hz"
			},
			{
				"op": "newnode",
				"path": "${path}.vco_2_waveform",
				"kind": "n_switch",
				"throws": [
					"Sine",
					"Phasor",
					"Triangle"
				],
				"value": 2
			},
			{
				"op": "newnode",
				"path": "${path}.feedback",
				"kind": "small_knob",
				"range": [
					0,
					6
				],
				"taper": "linear",
				"value": 0.25,
				"unit": "float"
			},
			{
				"op": "newnode",
				"path": "${path}.vco_1",
				"kind": "outlet",
				"index": 0
			},
			{
				"op": "newnode",
				"path": "${path}.vco_2",
				"kind": "outlet",
				"index": 1
			},
			{
				"op": "newnode",
				"path": "${path}.master",
				"kind": "outlet",
				"index": 2
			}
		]`);
    },

	"vca": function(path) { 
    return JSON.parse(`[
			{
				"op": "newnode",
				"path": "${path}",
				"kind": "vca",
				"category": "abstraction",
				"pos": [
					0,
					0,
					0
				],
				"orient": [
					0,
					0,
					0,
					1
				]
			},
			{
				"op": "newnode",
				"path": "${path}.signal",
				"kind": "inlet",
				"index": 0
			},
			{
				"op": "newnode",
				"path": "${path}.cv",
				"kind": "inlet",
				"index": 0
			},
			{
				"op": "newnode",
				"path": "${path}.cv_amount",
				"kind": "large_knob",
				"range": [
					0,
					1
				],
				"taper": "linear",
				"value": 0.5,
				"unit": "float"
			},
			{
				"op": "newnode",
				"path": "${path}.bias",
				"kind": "large_knob",
				"range": [
					0,
					1
				],
				"taper": "linear",
				"value": 0.5,
				"unit": "float"
			},
			{
				"op": "newnode",
				"path": "${path}.output",
				"kind": "outlet",
				"index": 1
			}
		]`);
    },

	"comparator": function(path) { 
    return JSON.parse(`[
			{
				"op": "newnode",
				"path": "${path}",
				"kind": "comparator",
				"category": "abstraction",
				"pos": [
					0,
					0,
					0
				],
				"orient": [
					0,
					0,
					0,
					1
				]
			},
			{
				"op": "newnode",
				"path": "${path}.A",
				"kind": "inlet",
				"index": 0
			},
			{
				"op": "newnode",
				"path": "${path}.B",
				"kind": "inlet",
				"index": 1
			},
			{
				"op": "newnode",
				"path": "${path}.max",
				"kind": "outlet",
				"index": 0
			},
			{
				"op": "newnode",
				"path": "${path}.min",
				"kind": "outlet",
				"index": 1
			}
		]`);
    },

	"outs": function(path) { 
    return JSON.parse(`[
			{
				"op": "newnode",
				"path": "${path}",
				"kind": "outs",
				"category": "abstraction",
				"pos": [
					0,
					0,
					0
				],
				"orient": [
					0,
					0,
					0,
					1
				]
			},
			{
				"op": "newnode",
				"path": "${path}.left_(mono)",
				"kind": "inlet",
				"index": 0
			},
			{
				"op": "newnode",
				"path": "${path}.right_(stereo)",
				"kind": "inlet",
				"index": 1
			},
			{
				"op": "newnode",
				"path": "${path}.volume",
				"kind": "small_knob",
				"range": [
					0,
					1
				],
				"taper": "log 3.8",
				"value": 0.25,
				"unit": "float"
			},
			{
				"op": "newnode",
				"path": "${path}.left",
				"kind": "outlet",
				"index": 0
			},
			{
				"op": "newnode",
				"path": "${path}.right",
				"kind": "outlet",
				"index": 1
			}
		]`);
    },
}

let operator_names = Object.keys(operator_constructors)
let module_names = Object.keys(module_constructors)

function spawnRandomModule(pos, orient) {
  let opname, ctor
  if (Math.random() < 0.5) {
    opname = module_names[Math.floor(Math.random() * module_names.length)]
    ctor = module_constructors[opname]
  } else {
    opname = operator_names[Math.floor(Math.random() * module_names.length)]
    ctor = operator_constructors[opname]
  }
  let path = gensym(opname)
  let deltas = ctor(path);
  deltas[0].pos = pos;
  deltas[0].orient = orient;
  return deltas; 
}
